{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MovieList = _resolveComponent(\"MovieList\");\n  const _component_ModalAdd = _resolveComponent(\"ModalAdd\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_MovieList), _withDirectives(_createVNode(_component_ModalAdd, {\n    onClose: _ctx.closeModalAdd\n  }, null, 8 /* PROPS */, [\"onClose\"]), [[_vShow, _ctx.isModalAddVisable]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DACEA,aAAuBC,uCACvBD,aAAuEE;IAAjCC,OAAK,EAAEC;EAAa,gDAAxCA,sBAAiB","names":["_createVNode","_component_MovieList","_component_ModalAdd","onClose","_ctx"],"sourceRoot":"","sources":["C:\\Users\\jozwi\\source\\repos\\MyMovies\\Web\\my-movies\\src\\App.vue"],"sourcesContent":["<template>\n  <MovieList></MovieList>\n  <ModalAdd v-show=\"isModalAddVisable\" @close=\"closeModalAdd\"></ModalAdd>\n</template>\n\n<script>\nimport MovieList from './components/MovieList.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    MovieList\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}